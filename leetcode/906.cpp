#include <bits/stdc++.h>

using namespace std;

using LL = long long;

template <typename T>
void pr(vector<T> x)
{
    for (auto a : x)
    {
        cout << a << " ";
    }
    cout << endl;
}

// nums = []
// for i in range(1, 100000):
//     p1 = int(str(i)+str(i)[::-1])**2
//     p2 = int(str(i)[:-1]+str(i)[::-1])**2
//     if(str(p1) == str(p1)[::-1]):
//         nums.append(p1)
//     if(str(p2) == str(p2)[::-1]):
//         nums.append(p2)

// print(nums)

// ans = []

// for i in nums:
//     if((len(str(i))) % 2 == 0):
//         ans.append(i)

// print(ans)

class Solution
{
public:
    int superpalindromesInRange(string left, string right)
    {
        vector<long long> v{121LL, 1LL, 484LL, 4LL, 9LL, 1002001LL, 10201LL, 1234321LL, 12321LL, 14641LL, 4008004LL, 40804LL, 44944LL, 10000200001LL, 100020001LL, 10221412201LL, 102030201LL, 104060401LL, 12102420121LL, 121242121LL, 12345654321LL, 123454321LL, 125686521LL, 40000800004LL, 400080004LL, 404090404LL, 100000020000001LL, 1000002000001LL, 100220141022001LL, 1002003002001LL, 1004006004001LL, 102012040210201LL, 1020304030201LL, 102234363432201LL, 1022325232201LL, 1024348434201LL, 121000242000121LL, 1210024200121LL, 121242363242121LL, 1212225222121LL, 1214428244121LL, 123212464212321LL, 1232346432321LL, 123456787654321LL, 1234567654321LL, 400000080000004LL, 4000008000004LL, 4004009004004LL, 1000000002000000001LL, 10000000200000001LL, 1000220014100220001LL, 10002000300020001LL, 10004000600040001LL, 1002003004003002001LL, 10020210401202001LL, 1002223236323222001LL, 10022212521222001LL, 10024214841242001LL, 1020100204020010201LL, 10201020402010201LL, 1020322416142230201LL, 10203040504030201LL, 10205060806050201LL, 1022123226223212201LL, 10221432623412201LL, 1022345658565432201LL, 10223454745432201LL, 1210000024200000121LL, 12100002420000121LL, 1210242036302420121LL, 12102202520220121LL, 12104402820440121LL, 1212203226223022121LL, 12122232623222121LL, 1212445458545442121LL, 12124434743442121LL, 1232100246420012321LL, 12321024642012321LL, 1232344458544432321LL, 12323244744232321LL, 1234323468643234321LL, 12343456865434321LL, 12345678987654321LL, 4000000008000000004LL, 40000000800000004LL, 40004000900040004LL};
        sort(begin(v), end(v));
        auto s2ll = [](string &x) -> long long
        {
            long long ans{};
            for (auto xx : x)
            {
                ans *= 10;
                ans += xx - '0';
            }
            return ans;
        };
        return upper_bound(begin(v), end(v), s2ll(right)) - lower_bound(begin(v), end(v), s2ll(left));
    }
};

int main()
{
}